# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Admin {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type ImageOutput {
  url: String
  previewUrl: String
}

type ImagesPaginationOutput {
  data: [ImageOutput!]!
}

type PaymentWithUserDetailsOutput {
  id: ID!
  username: String!
  amount: Float!
  currency: Currency!
  dateAdded: String!
  photo: String
  paymentType: PaymentProvider!
  subscriptionType: SubscriptionType!
}

"""USD"""
enum Currency {
  USD
}

"""STRIPE,PAYPAL"""
enum PaymentProvider {
  STRIPE
  PAYPAL
}

"""ONETIME,RECCURING"""
enum SubscriptionType {
  ONETIME
  RECCURING
}

type PaymentsWithUserDetailsPaginationOutput {
  data: [PaymentWithUserDetailsOutput!]!
}

type UserOutput {
  id: ID!
  username: String!
  profileLink: String!
  dateAdded: String!
}

type UserPaginationOutput {
  data: [UserOutput!]!
}

type UserPaymentOutput {
  subscriptionType: SubscriptionType!
  startDate: DateTime!
  endDate: DateTime!
  currency: Currency!
  price: Float!
  paymentType: PaymentProvider!
}

type UserPaymentsPaginationOutput {
  data: [UserPaymentOutput!]!
}

type UserInfoOutput {
  id: ID!
  username: String!
  profileLink: String!
  dateAdded: String!
  avatar: ImageOutput!
  isBanned: Boolean!
  banReason: String!
}

type Query {
  healthCheck: String!
  userList(page: Int! = 1, pageSize: Int! = 10, sortDirection: SortDirectionType! = Desc, searchUsernameTerm: String! = "", sortField: UserSortFields! = DateAdded, banFilter: BanFilterType!): UserPaginationOutput!
  userInfo(id: ID!): UserInfoOutput!
  userPhotos(userId: ID!, page: Int! = 1, pageSize: Int! = 10, sortDirection: SortDirectionType! = Desc): ImagesPaginationOutput
  userPayments(userId: ID!, page: Int! = 1, pageSize: Int! = 10, sortDirection: SortDirectionType! = Desc): UserPaymentsPaginationOutput
  paymentsList(page: Int! = 1, pageSize: Int! = 10, sortDirection: SortDirectionType! = Desc, sortField: PaymentsSortFields! = DateAdded, status: PaymentStatus! = CONFIRMED, searchUsernameTerm: String! = ""): PaymentsWithUserDetailsPaginationOutput!
}

"""Asc,Desc"""
enum SortDirectionType {
  Asc
  Desc
}

"""Username,DateAdded"""
enum UserSortFields {
  Username
  DateAdded
}

"""Banned,Active,All"""
enum BanFilterType {
  Banned
  Active
  All
}

"""Username,Amount,PaymentType,DateAdded,Status"""
enum PaymentsSortFields {
  Username
  Amount
  PaymentType
  DateAdded
  Status
}

"""CONFIRMED,PENDING,REJECTED"""
enum PaymentStatus {
  CONFIRMED
  PENDING
  REJECTED
}

type Mutation {
  deleteUser(input: DeleteUserInput!): Boolean!
  banUser(input: BanUserInput!): Boolean!
  createAdmin(input: CreateAdminInput!): Admin!
  unBanUser(input: UnBanUserInput!): Boolean!
}

input DeleteUserInput {
  id: String!
}

input BanUserInput {
  id: String!
  banReason: String = "Another Reason"
}

input CreateAdminInput {
  email: String!
  username: String!
  password: String!
}

input UnBanUserInput {
  id: String!
}