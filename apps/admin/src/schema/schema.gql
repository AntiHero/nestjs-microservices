# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Admin {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type UserOutput {
  id: ID!
  username: String!
  profileLink: String!
  dateAdded: String!
}

type ImageOutput {
  url: String
  previewUrl: String
}

type PaymentOutput {
  type: SubscriptionType!
  startDate: DateTime!
  endDate: DateTime!
  currency: Currency!
  price: Float!
  provider: PaymentProvider!
}

"""
ONETIME,RECCURING
"""
enum SubscriptionType {
  ONETIME
  RECCURING
}

"""
USD
"""
enum Currency {
  USD
}

"""
STRIPE,PAYPAL
"""
enum PaymentProvider {
  STRIPE
  PAYPAL
}

type UserInfoOutput {
  id: ID!
  username: String!
  profileLink: String!
  dateAdded: String!
  avatar: ImageOutput!
}

type Query {
  healthCheck: String!
  userList(
    page: Int! = 1
    pageSize: Int! = 9
    sortDirection: SortDirectionType! = Desc
    searchUsernameTerm: String! = ""
    sortField: UserSortFields! = DateAdded
  ): [UserOutput!]!
  userInfo(id: ID!): UserInfoOutput!
  userPhotos(
    userId: ID!
    page: Int! = 1
    pageSize: Int! = 9
    sortDirection: SortDirectionType! = Desc
  ): [ImageOutput!]
  payments(
    userId: ID!
    page: Int! = 1
    pageSize: Int! = 9
    sortDirection: SortDirectionType! = Desc
  ): [PaymentOutput!]
}

"""
Asc,Desc
"""
enum SortDirectionType {
  Asc
  Desc
}

"""
Username,DateAdded
"""
enum UserSortFields {
  Username
  DateAdded
}

type Mutation {
  deleteUser(input: DeleteUserInput!): Boolean!
  createAdmin(input: CreateAdminInput!): Admin!
}

input DeleteUserInput {
  id: String!
}

input CreateAdminInput {
  email: String!
  username: String!
  password: String!
}
